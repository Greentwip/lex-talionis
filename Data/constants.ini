; Game-wide constant values
; ------------------------------------------
; How many items can a unit carry at maximum
max_items=5
; Maximum value that a non-HP stat can be, irrespective of class caps
max_stat=30
; How much AS is needed to double
speed_to_double=4
; What a mounted units CON is subtracted from to determine AID
mounted_aid=25
; 0 - No critting, 1 - 2x damage minus 1x defense, 2 - 2x damage minus 2x defense, 3 - 3x damage minus 3x defense (normal)
crit=3
; Which column flying units should use in mcost.txt (0-indexed)
flying_mcost_column=6
; Which column units with fleet_of_foot should use in mcost.txt (0-indexed)
fleet_mcost_column=7
; How linear the exp curve is. Higher = less linear (normal FE is around 1)
exp_curve=0.035
; Higher the number, the more exp gotten for each interaction overall (normal FE is around 10)
exp_magnitude=10
; Offset the difference in levels (normal FE is 0)
exp_offset = 0
; Normal exp is multiplied by this on a kill (normal FE is 3.0)
kill_multiplier=3
; Whether to use line of sight algorithm when choosing targets for weapons
line_of_sight=0
; Whether to use line of sight algorithm when choosing targets for spells
spell_line_of_sight=0
; Whether to use line of sight algorithm for auras
aura_los=0
; Whether units on defense can double their attackers
def_double=1
; Whether this game has supports
support=0
; What the max level before promotion is (normal FE is 0,20,20 -- with trainees: 10,20,20)
max_level=0,20,20
; Allow automatic promotion after max level?
auto_promote=0
; How to level up non-player units
; 0: Random - On level-up, growth rate chance to level the stat.
; 1: Fixed - Start each stat at 50. On level-up, add growth rate to stat. When over 100, decrement by 100 and level the stat once
; 2: Hybrid - On level-up, sum all growth rates together. Choose x of the stats to level-up randomly based on their probability, where x summed growth rates/100
; 3: Match - Match whatever the player chose
enemy_leveling=0
; How to level up player units
; 0: Random, 1: Fixed, 2: Hybrid, 3: Allow choice
growths=0
; How hits are calculated
; classic - one d100 is rolled. If > hit rate, miss. (FE 1 - 5)
; true_hit - two d100 are rolled and averaged. If > hit rate, miss (FE 6 - 13)
; true_hit+ - three d100 are rolled and averaged. If > hit rate, miss
; no_rng - Set a threshold. All attacks with <= hit rate, miss. If you use this, additional "set_roll=49" required in this file
; hybrid - All attacks hit. Multiply damage by hit rate.
rng=true_hit
; How many class skills a fully ranked unit should have (not actually a hard limit, just for UI adjustments)
num_skills=1
; Number of save slots
save_slots=3
; Difficulty Names (If 0, then skip)
difficulties=0
; Whether to hardset classic (0), casual (1), or allow a choice (2)
death=0
; Music choices
; On title screen
music_main=Helms Deep - Start
; On game over
music_game_over=Gate of Steiner
; In shops
music_armory=All Aboard to Rogueport
music_vendor=All Aboard to Rogueport
; Bottom left attribution on title screen
attribution=created by rainlash
; ===
; The following are coefficients used by the combat formulas
; Add 1x STR to damage for physical weapons
damage_str_coef=1
; Add 1x MAG to damage for magical weapons and spells
damage_mag_coef=1
; Add 3x AttackSPD to avoid
avoid_speed_coef=2
; Add 1x LCK to avoid
avoid_luck_coef=1
; Add 3x SKL to accuracy
accuracy_skill_coef=2
; Add 1x LCK to accuracy
accuracy_luck_coef=0.5
; Add 1x SKL to crit accuracy
crit_accuracy_skill_coef=0.5
; Add 2x LCK to crit avoid
crit_avoid_luck_coef=1
; Add 1x defensive stat to defense
defense_coef=1